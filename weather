import streamlit as st
import requests
from bs4 import BeautifulSoup
import google.generativeai as genai

# Configure API key for Google Generative AI
genai.configure(api_key="AIzaSyAwTrLqf_Kpq4jvXDOtls9EqpkjKzCGlu0")

# CSS styling for chat messages
css = '''
<style>
.chat-message {
    padding: 1.5rem;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    display: flex;
}
.chat-message.user {
    background-color: #2b313e;
}
.chat-message.bot {
    background-color: #475063;
}
.chat-message .avatar {
  width: 20%;
}
.chat-message .avatar img {
  max-width: 78px;
  max-height: 78px;
  border-radius: 50%;
  object-fit: cover;
}
.chat-message .message {
  width: 85%;
  padding: 0 1.25rem;
  color: #fff;
}
</style>
'''
st.write(css, unsafe_allow_html=True)

# Define user and bot templates
user_template = '''
<div class="chat-message user">
    <div class="avatar">
        <img src="https://resizing.flixster.com/ocuc8yjm8Fu5UK5Ze8lbdp58m9Y=/300x300/v2/https://flxt.tmsimg.com/assets/p11759522_i_h9_aa.jpg">
    </div>    
    <div class="message">{{MSG}}</div>
</div>
'''

bot_template = '''
<div class="chat-message bot">
    <div class="avatar">
        <img src="https://www.shutterstock.com/image-vector/nerd-robot-vector-illustration-version-260nw-2126944997.jpg">
    </div>
    <div class="message">{{MSG}}</div>
</div>
'''

# Function to scrape data from Telangana Agriculture Department website
def scrape_agri_telangana():
    url = "https://agri.telangana.gov.in/content.php?U=19"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, "html.parser")
    data = soup.find_all("div", class_="innercontent")

    # Extract relevant information from the webpage (example)
    # Modify this part based on the specific data you want to extract
    if data:
        content = data[0].get_text().strip()
        return content
    else:
        return "No data found"

# Streamlit app title
st.title("Farmers Chatbot")

# Accept user input for chat
query = st.text_input("Ask a question about farming:")

# Execute response logic when user clicks 'Execute' button
if st.button("Execute") and query:
    with st.spinner('Generating response...'):
        try:
            # Fetch data from Telangana Agriculture Department website
            agriculture_info = scrape_agri_telangana()

            # Initialize GenerativeModel for chat
            model = genai.GenerativeModel('models/gemini-pro')

            # Start chat session and get response
            chat = model.start_chat()
            response = chat.send_message(query)
            answer = response.text

            # Display user query and chatbot's answer
            st.write(user_template.replace("{{MSG}}", query), unsafe_allow_html=True)
            st.write(bot_template.replace("{{MSG}}", answer), unsafe_allow_html=True)
            st.write("")
            st.write("Here's some information from Telangana Agriculture Department:")
            st.write(agriculture_info)

        except Exception as e:
            st.error(f"An error occurred: {str(e)}")

